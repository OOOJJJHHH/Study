import sys
from collections import deque

sys.setrecursionlimit(10000)
input = sys.stdin.readline

n, m, v = map(int, input().split())  # 정점 개수, 간선 개수, 시작 정점
A = [[] for _ in range(n+1)]
visited = [False] * (n+1)

# 인접 리스트 생성
for _ in range(m):
    s, e = map(int, input().split())
    A[s].append(e)
    A[e].append(s)

# 작은 정점 번호부터 방문하도록 정렬렬
for i in range(1, n+1):
    A[i].sort()

# DFS
dfs_result = []

def DFS(v):
    visited[v] = True
    dfs_result.append(v)    
    for i in A[v]:
        if not visited[i]:
            DFS(i)

# BFS
bfs_result = []

def BFS(v):
    queue = deque([v])
    visited[v] = True
    while queue:
        node = queue.popleft()
        bfs_result.append(node)
        for i in A[node]:
            if not visited[i]:
                visited[i] = True
                queue.append(i)

# DFS 실행행
visited = [False] * (n+1)
DFS(v)

# BFS 실행
visited = [False] * (n+1)
BFS(v)

# 결과출력력
print(" ".join(map(str, dfs_result)))
print(" ".join(map(str, bfs_result)))
